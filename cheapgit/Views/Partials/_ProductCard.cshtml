@inherits Umbraco.Web.Mvc.UmbracoViewPage<ProductCardViewModel>
@using ContentModels = Umbraco.Web.PublishedModels;
@using Umbraco.Web.Models
@using cheapgit.ViewModels.blocks
@{
    IPublishedContent productDetailsPage;
    if (Model.Content.Parent.Value("rootProductDetailsPage") == null)
    {
        productDetailsPage = Model.Content.Root().Value<IPublishedContent>("rootProductDetailsPage");
    } else
    {
        productDetailsPage = Model.Content.Value<IPublishedContent>("rootProductDetailsPage");
    }
    var inStock = (Model.product.quantity > 0);
}

<div class="card h-100 product-card">
    <img class="card-img-top" src="data:image/jpeg;base64, @Model.product.images.FirstOrDefault()" alt="Card image" style="width:100%;">
    <div class="card-body">
        @if (inStock)
        {
            <p><i class="fas fa-check-circle"></i> @Model.product.quantity in stock</p>
        }
        else
        {
            <p><i class="fas fa-times-circle"></i> Out of stock</p>
        }
        <h4 class="card-title">
            @Model.product.name
        </h4>

    </div>
    <div class="card-footer">
        <div class="row">
            <p class="col-md-5 price">£@Model.product.price</p>
            <div class="btn-group col-md-7">
                <a href="@String.Format("{0}?id={1}", productDetailsPage.Url, Model.product.id)" class="btn btn-outline-primary" style="text-align: right;">View</a>
                @if (inStock)
                {
                    <a href="#" class="btn btn-outline-primary">Add To Cart</a>
                }
                else
                {
                    <a href="#" class="btn btn-outline-primary disabled">Add To Cart</a>
                }
            </div>
        </div>
    </div>
</div>